# FIXME: We don't want service started at install time like Debian does!
# use dpkg-divert to install a secure config first (doesn't need to be usable)

- name: Query - expect Debian-compatible openssh-server package?
  when: ansible_os_family == "Debian"
  set_fact: service_ssh_server="ssh"
  #
  # Later investigation shows Debian provides an alias for `sshd`,
  # providing compatibility with Fedora.  However I still want the OS tests,
  # and I like the pattern to handle any variations in names.
  #
  # So I ignore the alias, considering it a convenience for users.
  # It's not really part of some systematic convergence.

- name: Query - expect RedHat-compatible openssh-server package?
  when: ansible_os_family == "RedHat"
  set_fact: service_ssh_server="sshd"

- name: Test operating system is supported
  assert:
    that: service_ssh_server is defined
    

- name: install openssh-server
  package: name=openssh-server state=latest
  #
  # `state=present` is normally good enough, and can avoid some time-wasting.
  # Reason for extra caution here, is to avoid enabling an out-of-date ssh server.

- name: create sshlogin group
  group: name=sshlogin state=present

- name: insert/update configuation block in /etc/ssh/sshd_config
  blockinfile:
    dest: /etc/ssh/sshd_config
    insertbefore: BOF  # Insert at start, because earlier lines take precedence
    block: |+
      
      # No brute force attacks
      PasswordAuthentication no
      
      # No root user (unless given command enabled in /root/.ssh/authorized_keys)
      PermitRootLogin forced-commands-only
      
      # SSH users must be whitelisted by admin
      AllowGroups sshlogin root
      
      # No fearmongering about missing DNS ("POSSIBLE BREAK IN ATTEMPT")
      UseDNS no
      
    #end block

- name: Enable ssh server
  service:
    name: "{{ service_ssh_server }}"
    enabled: yes
    state: started
