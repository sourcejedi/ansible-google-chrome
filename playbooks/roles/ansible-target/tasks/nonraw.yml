# 1/3) Query condition
- name: query  | python dnf module installed, required by ansible dnf module
  when: ansible_pkg_mgr == "dnf"
  command: python2 -c "import dnf"
  register: python_dnf
  failed_when: False
  changed_when: False
  always_run: yes

# 2/3) Run command task conditionally, to provide accurate "changed" status
- name: ensure | python dnf module installed, required by ansible dnf module
  when: ansible_pkg_mgr == "dnf" and python_dnf.rc != 0
  command: dnf install -y python2-dnf
  args:
    warn: no  # can't use dnf module, we're installing its requirements

# 3/3) The condition must now hold.  This "fixes" ansible check mode.
- name: check  | python dnf module installed, required by ansible dnf module
  when: ansible_pkg_mgr == "dnf"
  command: python2 -c "import dnf"
  changed_when: False
  always_run: yes


- name: Query whether selinux is enabled
  shell: CMD=/usr/sbin/selinuxenabled; test -x $CMD && $CMD
  register: selinuxenabled
  failed_when: selinuxenabled.rc not in [0, 1]
  changed_when: False
  always_run: yes

# Reminder: package installation is *not* portable, because names vary between distros
# Debian package would be python-selinux
- name: Install package required under selinux (e.g. for copy module)
  when: selinuxenabled.rc == 0
  package:
    state: present
    name: libselinux-python
  register: selinux_install


# NOTE new selinux facts are not read here
# however setup module is re-run before each playbook
# so we have no reason to refresh it here, at the end of a playbook
